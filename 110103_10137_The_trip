The Trip


		

A group of students are members of a club that travels annually to different locations. Their destinations in the past have included Indianapolis, Phoenix, Nashville, Philadelphia, San Jose, and Atlanta. This spring they are planning a trip to Eindhoven.

The group agrees in advance to share expenses equally, but it is not practical to share every expense as it occurs. Thus individuals in the group pay for particular things, such as meals, hotels, taxi rides, and plane tickets. After the trip, each student's expenses are tallied and money is exchanged so that the net cost to each is the same, to within one cent. In the past, this money exchange has been tedious and time consuming. Your job is to compute, from a list of expenses, the minimum amount of money that must change hands in order to equalize (within one cent) all the students' costs.

Input

Standard input will contain the information for several trips. Each trip consists of a line containing a positive integer n denoting the number of students on the trip. This is followed by n lines of input, each containing the amount spent by a student in dollars and cents. There are no more than 1000 students and no student spent more than $10,000.00. A single line containing 0 follows the information for the last trip.
Output

For each trip, output a line stating the total amount of money, in dollars and cents, that must be exchanged to equalize the students' costs.
Sample Input

3
10.00
20.00
30.00
4
15.00
15.01
3.00
3.01
0

/*
 * 110103/10137 The trip
 * author: Huazhi Song
 * date: 2016-05-03
*/
// include head file
#include <iostream>
#include <iomanip>
#include <math.h>
// usning namespace std
using namespace std;
// main function
int main()
{
	// 1.define n of the number of people
	int n;
	// 2.define data of the money of people spent
	double data[1001] ;
	// begin the program
	while (cin >> n && n != 0)
	{
		//data = new float(n);
		// 3.input data,define sum of money and compute it
		double sum = 0.0;
		for(int i = 0;i < n;i ++)
		{
			cin >> data[i];
			sum += data[i];
		}// end for
		// 4.compute mean,don't round it
		double mean = sum / n;
		// 5.compute difference money by negtive and positive
		double diff = 0.0,diffNeg = 0.0,diffPos = 0.0;
		for(int i = 0;i < n;i ++)
		{
			diff = (int((data[i] - mean) * 100)) / 100.0;
			if (diff > 0)
			{
				diffPos += diff;
			}
			else
			{
				diffNeg -= diff;
			} // end if else
		}// end for i
		// 6.print result
		double result = diffPos > diffNeg ? diffPos : diffNeg;
//		cout << 2.3 << endl;
		cout << '$' << setiosflags(ios::fixed) << setprecision(2) << result << endl;
	}// end while n


	return 0;
} // end main function
